#!/usr/bin/env python
# test2 0.0.1
# Generated by dx-app-wizard.
#
# Basic execution pattern: Your app will run on a single machine from
# beginning to end.
#
# See https://wiki.dnanexus.com/Developer-Portal for documentation and
# tutorials on how to modify this file.
#
# DNAnexus Python Bindings (dxpy) documentation:
#   http://autodoc.dnanexus.com/bindings/python/current/

import os, subprocess
import dxpy

@dxpy.entry_point('main')
def main(infile=None, inhash=None):

    if not (infile or inhash):
        print ("Infile must be specified explicitly or in inhash")   

    # The following line(s) initialize your data object inputs on the platform
    # into dxpy.DXDataObject instances that you can start using immediately.
    if infile:
        infile = dxpy.DXFile(infile)
    else:
        infile = dxpy.DXFile(inhash.get('infile'))

    # The following line(s) download your file inputs to the local file system
    # using variable names for the filenames.

    dxpy.download_dxfile(infile.get_id(), "infile")

    subprocess.check_call('cat infile',shell=True)
    subprocess.check_call('cp infile outfile',shell=True)

    outfile = dxpy.upload_local_file("outfile")

    # The following line fills in some basic dummy output and assumes
    # that you have created variables to represent your output with
    # the same name as your output fields.

    output = {}
    output["outfile"] = dxpy.dxlink(outfile)

    return output

dxpy.run()
